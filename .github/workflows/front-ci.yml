# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Frontend CI (manual)

on:
  workflow_dispatch: {}   # run only when triggered manually

jobs:
  node-test-and-build:
    runs-on: ubuntu-latest

    # All shell steps run from /front
    defaults:
      run:
        working-directory: front

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'front/package-lock.json'

      - name: Install dependencies
        run: npm ci

      # Add the JUnit reporter (not in your package.json)
      - name: Add karma-junit-reporter (CI-only)
        run: npm i -D karma-junit-reporter

      # Install Chrome for Karma's ChromeHeadless
      - name: Setup Chrome
        id: chrome
        uses: browser-actions/setup-chrome@v1

      # Build (optional)
      - name: Build
        run: npm run build --if-present

      - name: Generate karma-ci.conf.js
        run: |
          cat > karma-ci.conf.js <<'EOF'
          const base = require('./karma.conf.js');
          module.exports = function (config) {
            // load project's base config
            base(config);
      
            // ensure the junit plugin is loaded even if base config pins plugins array
            const plugins = config.plugins || [];
            plugins.push(require('karma-junit-reporter'));
            config.plugins = plugins;
      
            // merge reporters safely
            const reporters = new Set([...(config.reporters || []), 'junit', 'coverage', 'progress']);
            config.reporters = Array.from(reporters);
      
            // CI-friendly browser
            config.browsers = ['ChromeHeadless'];
      
            // junit output location
            config.junitReporter = {
              outputDir: 'test-results/junit',
              outputFile: 'results.xml',
              useBrowserName: false,
            };
          };
          EOF

      
      # Run Karma in headless mode, produce JUnit XML + coverage
      - name: Test (Karma) with coverage
        env:
          CHROME_BIN: ${{ steps.chrome.outputs.chrome-path }}
        run: |
          npx ng test \
            --no-watch \
            --browsers=ChromeHeadless \
            --code-coverage \
            --karma-config=karma-ci.conf.js
        continue-on-error: true

      - name: Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Frontend Tests
          path: front/test-results/junit/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: front/coverage/**
          if-no-files-found: warn

      - name: Upload build dist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: front/dist/**
          if-no-files-found: warn
