# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_dispatch: {}   # run only when triggered manually

#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:

  test-and-coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back
    

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
     # uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
      #with:
       # directory: back
       
    # Optional but speeds up repeated analyses
    - name: Cache SonarQube packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    # Run build+tests+coverage but DON'T stop the job on test failure,
    # so the reporter can still parse and annotate results.
    - name: Build, test, and generate JaCoCo
      run: |
        mvn -B -ntp clean verify \
          org.jacoco:jacoco-maven-plugin:prepare-agent \
          org.jacoco:jacoco-maven-plugin:report
      continue-on-error: true

    - name: SonarQube analysis (self-hosted)
      if: always()
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=krisandr-a_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD-back      

   # Parse Surefire JUnit XML reports and create a rich summary + annotations
    - name: Surefire test report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Maven Tests
        path: back/**/target/surefire-reports/*.xml   # path is from repo root
        reporter: java-junit
        fail-on-error: true   # fail the job if tests failed

    # (Optional) Upload HTML coverage so you can download & view it
    - name: Upload JaCoCo HTML report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-report
        path: back/**/target/site/jacoco/
        if-no-files-found: warn
